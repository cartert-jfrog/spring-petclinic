# OIDC Example for JFrog
name: "JFrog CLI OIDC Example"
on: push

# Set to true to ignore new version warnings
env:
  JFROG_CLI_AVOID_NEW_VERSION_WARNING: 'true'

# Token permissions for OIDC
permissions:
  actions: read           # for detecting the Github Actions environment
  id-token: write         # for creating OIDC tokens for signing
  contents: write         # for creating fixing pull requests and pushing changes
  pull-requests: write    # for creating pull requests to fix vulnerabilities
  security-events: write  # for uploading SARIF results to GitHub Code Scanning

# Setup environment with Ubuntu and Java 21
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      # Actions OIDC Debugger
      # - name: Debug OIDC Claims
      #   uses: github/actions-oidc-debugger@main
      #   with:
      #     audience: '${{ github.server_url }}/${{ github.repository_owner }}'      

      # Setup the JFrog CLI to use with https://diamond.jfrog.io
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JF_URL }} 
        with:
          oidc-provider-name: setup-jfrog-cli 
          oidc-audience: jfrog-github
      
      # Build the maven project and skip tests
      - name: Build with Maven
        run: mvn package -DskipTests

      # Use the JFrog "jf" command to collect information from 
      # the build and publish to Artifactory
      - name: Run JFrog CLI
        run: | 
          # Ping the server
          jf rt ping
          # Collect environmnt variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp
        
